{"version":3,"file":"component---src-pages-index-tsx-64cdccaa19b5d31382f3.js","mappings":"sKAoCA,UA7B+DA,IAAc,IAAb,KAAEC,GAAM,EACtE,OACEC,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACC,EAAAA,EAAM,MACPD,EAAAA,cAACE,EAAAA,EAAO,CAACC,UAAU,QAEfC,OACGC,QAAQC,EAAAA,EAASC,KAAKR,EAAKS,aAAaC,MAAMC,KAAIC,GAAKA,EAAEC,SACzDC,MAAK,CAACC,EAAGC,IAAMD,EAAE,GAAGE,cAAcD,EAAE,MACpCL,KAAIO,IAAA,IAAEC,EAAQC,GAAM,SACnBnB,EAAAA,cAAAA,UAAAA,CAASG,UAAU,gDAAgDiB,GAAIF,GACrElB,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,sBAAsBe,GACpClB,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,0BACXgB,EAAMT,KAAIW,GACTrB,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,yBACZH,EAAAA,cAACsB,EAAAA,GAAI,CAACC,GAAK,iBAAgBF,EAAKG,MAAOrB,UAAU,oCAC9CkB,EAAKI,WAKN,KAId,C","sources":["webpack://glossary/./src/pages/index.tsx"],"sourcesContent":["import React, { FC } from \"react\"\nimport { graphql, Link, type PageProps } from \"gatsby\"\nimport { Header } from \"@/components\"\nimport { Wrapper } from \"@/components/wrapper\"\nimport { Glossary } from \"@/model\"\n\n\nconst IndexPage: React.FC<PageProps<Queries.IndexPageQuery>> = ({ data }) => {\n  return (\n    <div>\n      <Header />\n      <Wrapper className=\"mt-8\">\n        {\n          Object\n            .entries(Glossary.make(data.allTermsJson.edges.map(n => n.node)))\n            .sort((a, b) => a[0].localeCompare(b[0]))\n            .map(([letter, terms]) => (\n              <section className=\"border-t border-gray-300 py-8 flex space-x-12\" id={letter}>\n                <h2 className=\"text-2xl font-bold\">{letter}</h2>\n                <ul className=\"grid grid-cols-4 gap-4\">\n                  {terms.map(term => (\n                    <li className=\"text-sm text-gray-800\">\n                      <Link to={`/allTermsJson/${term.tag}`} className=\"hover:underline hover:text-black\">\n                        {term.title}\n                      </Link>\n                    </li>)\n                  )}\n                </ul>\n              </section>\n            ))\n        }\n      </Wrapper>\n    </div>\n  )\n}\n\nexport default IndexPage\nexport const query = graphql`\nquery IndexPage {\n  allTermsJson {\n    edges {\n      node {\n        id,\n        title,\n        tag,\n        definition\n      }\n    }\n  }\n}\n  `;\n\n"],"names":["_ref","data","React","Header","Wrapper","className","Object","entries","Glossary","make","allTermsJson","edges","map","n","node","sort","a","b","localeCompare","_ref2","letter","terms","id","term","Link","to","tag","title"],"sourceRoot":""}