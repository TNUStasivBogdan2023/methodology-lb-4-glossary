{"data":{"allTermsJson":{"edges":[{"node":{"title":"Higher Kinded Types (HKT)","definition":"Типи, які оперують іншими типами, що дозволяє абстрагувати себе від конкретних типів даних."}},{"node":{"title":"Type class","definition":"Визначає оператори чи функції, які повинні бути реалізовані для певного типу."}},{"node":{"title":"Semigroup","definition":"Алгебраїчна структура, яка визначає операцію комбінування для елементів."}},{"node":{"title":"Monoid","definition":"Семігрупа з ідентичним елементом, що є нейтральним відносно операції комбінування."}},{"node":{"title":"Functor","definition":"Структура, яка дозволяє відображати функції від одного типу до іншого."}},{"node":{"title":"Applicative","definition":"Розширення функтора, яке дозволяє застосовувати функцію у контексті до значення в контексті."}},{"node":{"title":"Monad","definition":"Тип конструкції в функціональному програмуванні, яка представляє обчислення з контекстом."}},{"node":{"title":"Функціональне програмування (ФП)","definition":"Підхід до програмування, де функції вважаються основними будівельними блоками програм."}},{"node":{"title":"Реактивне функціональне програмування","definition":"Використання функціональних конструкцій для роботи зі змінюваним станом і асинхронними подіями."}},{"node":{"title":"Об'єктно-орієнтоване програмування (ООП)","definition":"Підхід до програмування, де об'єкти представляють екземпляри класів, а програма складається з об'єктів, які взаємодіють між собою."}},{"node":{"title":"Lambda-calculus","definition":"Математична система, що служить формальним основою функціонального програмування."}},{"node":{"title":"Категорія","definition":"Абстрактна структура в теорії категорій, що визначає відносини між об'єктами та морфізмами."}},{"node":{"title":"Гомоморфізм","definition":"Структурно збережена відображення між двома алгебраїчними структурами."}},{"node":{"title":"Ендоморфізм","definition":"Гомоморфізм, де об'єкт та джерело відображення є однаковими."}},{"node":{"title":"Мономорфізм","definition":"Гомоморфізм, який є ін'єктивним (різні джерела не можуть мати одинакові об'єкти)."}},{"node":{"title":"Гомогенний","definition":"Єдність у складі чи структурі."}},{"node":{"title":"Гетерогенний","definition":"Різноманітність у складі чи структурі."}},{"node":{"title":"Випадкова складність","definition":"Складність алгоритмів, яка враховує гіркоту найгіршого випадку."}},{"node":{"title":"Технічна складність","definition":"Складність програми, визначена характеристиками технічної реалізації."}},{"node":{"title":"Складність","definition":"Ступінь важкості або витрат для розуміння, розробки чи підтримки програми."}},{"node":{"title":"Контроль виконання (Flow)","definition":"Управління послідовністю виконання програми, яке може бути лінійним чи структурованим."}},{"node":{"title":"Типова система","definition":"Система, що визначає правила для класифікації виразів за їхніми типами."}},{"node":{"title":"Алгебраїчні типи даних","definition":"Визначення типів даних за допомогою алгебраїчних конструкцій, таких як суми та добутки типів."}},{"node":{"title":"Поліморфізм","definition":"Можливість використовувати однаковий ідентифікатор для різних типів даних."}},{"node":{"title":"Композиція функцій","definition":"Об'єднання двох функцій в одну, де вихід однієї функції є входом для іншої."}},{"node":{"title":"Чиста функція","definition":"Функція, яка завжди повертає один і той же результат для тих самих вхідних даних і не має побічних ефектів."}},{"node":{"title":"Незмінність","definition":"Властивість даних, яка не дозволяє їхню зміну після створення."}},{"node":{"title":"Замикання (Closures)","definition":"Функція, яка зберігає посилання на змінні з оточення, в якому вона була створена."}},{"node":{"title":"Трансформатор монад","definition":"Конструкція, яка дозволяє комбінувати різні монади у функціональному програмуванні."}},{"node":{"title":"Функціональний об'єкт","definition":"Об'єкт, який веде себе подібно до функції, маючи один чи декілька методів."}}]}}}