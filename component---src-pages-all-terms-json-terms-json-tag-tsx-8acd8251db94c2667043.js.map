{"version":3,"file":"component---src-pages-all-terms-json-terms-json-tag-tsx-8acd8251db94c2667043.js","mappings":"wLAKe,SAASA,EAAS,GAA4C,UAA5C,KAAEC,GAAwC,EAEzE,MAAMC,EAAOD,EAAKE,UAElB,OACEC,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACC,EAAAA,EAAM,MACPD,EAAAA,cAACE,EAAAA,EAAO,CAACC,UAAU,SACjBH,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,2BAA0B,IAAEL,aAAI,EAAJA,EAAMM,MAAM,MAErDN,aAAI,EAAJA,EAAMO,QACLL,EAAAA,cAAAA,SAAAA,CAAQG,UAAU,kDAChBH,EAAAA,cAAAA,MAAAA,CAAKM,IAAKR,aAAI,EAAJA,EAAMO,MAAMC,MACtBN,EAAAA,cAAAA,UAAAA,CAASG,UAAU,uCAAuCL,EAAKO,MAAME,QAAQ,MAGjFP,EAAAA,cAAAA,IAAAA,KAAIF,aAAI,EAAJA,EAAMU,YACVR,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,qBACdH,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,0BAAyB,YACtCL,SAAa,QAAT,EAAJA,EAAMW,eAAO,WAAT,EAAJC,EAAeC,SACdX,EAAAA,cAAAA,KAAAA,KACGF,EAAKW,QAAQG,KAAI,CAACC,EAAQC,IACzBd,EAAAA,cAAAA,KAAAA,KAAKc,EAAQ,EAAE,KAAGD,OAOhC,C","sources":["webpack://glossary/./src/pages/allTermsJson/{TermsJson.tag}.tsx"],"sourcesContent":["import { Header } from \"@/components\";\nimport { Wrapper } from \"@/components/wrapper\";\nimport { PageProps, graphql } from \"gatsby\";\nimport React from \"react\";\n\nexport default function TermPage({ data }: PageProps<Queries.TermPageQuery>) {\n\n  const term = data.termsJson;\n\n  return (\n    <div>\n      <Header />\n      <Wrapper className=\"mt-12\">\n        <h1 className=\"font-bold text-3xl mb-4\"> {term?.title} </h1>\n\n        {term?.image && (\n          <figure className=\"flex flex-col items-center justify-center mb-4\">\n            <img src={term?.image.src} />\n            <caption className=\"text-sm italic font-semibold mt-2.5\">{term.image.caption} </caption>\n          </figure>\n        )}\n        <p>{term?.definition}</p>\n        <hr className=\"bg-gray-600 my-6\" />\n        <h2 className=\"mb-2 text-xl font-bold\">Джерела</h2>\n        {term?.sources?.length && (\n          <ul>\n            {term.sources.map((source, index) => (\n              <li>{index + 1}. {source}</li>\n            ))}\n          </ul>\n        )}\n      </Wrapper>\n    </div>\n  );\n}\n\n\nexport const query = graphql`\n  query TermPage($tag: String!) {\n     termsJson(tag: {eq: $tag}) {\n        title,\n        definition,\n        sources,\n        image {\n            src,\n            caption\n        }\n     }\n  }\n`;\n"],"names":["TermPage","data","term","termsJson","React","Header","Wrapper","className","title","image","src","caption","definition","sources","_term$sources","length","map","source","index"],"sourceRoot":""}